name: OSCAR E2E Testing
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
env:
  JAVA_VERSION: '21'
  NODE_VERSION: '22'
  OSCAR_DIR: 'web/oscar-viewer'
jobs:
  Build:
    runs-on: self-hosted
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          repository: Botts-Innovative-Research/osh-oakridge-buildnode

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'zulu'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
#          cache: 'npm'
          cache-dependency-path: ${{ env.OSCAR_DIR }}/package-lock.json

      - name: Install oscar-viewer dependencies
        working-directory: ${{ env.OSCAR_DIR }}
        run: npm i

      - name: Build oscar-viewer
        working-directory: ${{ env.OSCAR_DIR }}
        run: npm run build

      - name: Install Cypress
        working-directory: ${{ env.OSCAR_DIR }}
        run: npx cypress install

      - name: Verify Rapiscan simulator running
        run: |
          "Get-Process srls"
          "netstat -aon | findstr 1601"
        shell: powershell

      - name: Verify Aspect simulator running
        run: |
          "Get-Process AspectHardwareEmulator"
          "netstat -aon | findstr 502"
        shell: powershell

      - name: Verify Sony camera reachable
        run: echo "Include sony test"

      - name: Verify Axis camera reachable
        run: echo "Include axis test"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew clean build -x osgi
#        env:
#        # Add connection env variables

      - name: Start OSH test node
        run: # start node for cypress tests

      - name: Run Cypress UI tests
        working-directory: ${{ env.OSCAR_DIR }}
        run: npm test

